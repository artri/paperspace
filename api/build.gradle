plugins {
    id "com.moowork.gulp" version "1.2.0"
    id 'org.springframework.boot' version '2.3.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'idea'
    id 'jacoco'
}

idea {
    module {
        downloadSources = true
    }
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2')
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.flywaydb:flyway-core:6.4.1'
    implementation 'org.xerial:sqlite-jdbc:3.32.3.2'

    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'com.zaxxer:HikariCP:3.4.5'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'org.apache.solr:solr-solrj:8.5.0'
    implementation 'org.apache.pdfbox:pdfbox:2.0.19'
    implementation 'net.sf.jmimemagic:jmimemagic:0.1.3'
    implementation 'org.apache.pdfbox:pdfbox-tools:2.0.19'
    implementation 'net.sourceforge.tess4j:tess4j:4.5.1'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'commons-io:commons-io:2.8.0'
    implementation 'net.coobird:thumbnailator:0.4.12'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

group = 'com.dedicatedcode.paperspace'
version = '2.0.0'
description = 'api'
sourceCompatibility = '11'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

node {
    nodeModulesDir = file("${project.projectDir}/src/frontend/")
}

bootJar {
    archiveName = 'api.jar'
}
// run gulp install
gulp_dist.dependsOn 'installGulp'

gulp {
    workDir = file("${project.projectDir}/src/frontend/")
    colors = true
    bufferOutput = false
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
    dependsOn test // tests are required to run before generating the report
}
processResources.dependsOn gulp_dist
